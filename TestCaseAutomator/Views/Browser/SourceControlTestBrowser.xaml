<UserControl x:Class="TestCaseAutomator.Views.Browser.SourceControlTestBrowser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:vm="clr-namespace:TestCaseAutomator.ViewModels.Browser"
             xmlns:nodes="clr-namespace:TestCaseAutomator.ViewModels.Browser.Nodes"
             xmlns:behaviors="clr-namespace:SharpEssentials.Controls.Behaviors;assembly=SharpEssentials.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xt="clr-namespace:TestCaseAutomator.Views.MarkupExtensions"
             xmlns:convert="clr-namespace:SharpEssentials.Controls.Converters;assembly=SharpEssentials.Controls"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance Type=vm:SourceControlTestBrowserViewModel, IsDesignTimeCreatable=False}"
             DataContext="{Binding Source={xt:ViewModelLocator {x:Type vm:SourceControlTestBrowserViewModel}}, Path=ViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <convert:ObjectGetTypeConverter x:Key="GetTypeConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Padding="5,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center">
            Select automation from source control:
        </TextBlock>

        <TreeView Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  ItemsSource="{Binding SourceTree}" Margin="2,0,2,0">

            <i:Interaction.Behaviors>
                <behaviors:TreeViewBindableSelectedItem SelectedItem="{Binding SelectedTest, Mode=TwoWay}"/>
            </i:Interaction.Behaviors>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type nodes:INodeViewModel}" ItemsSource="{Binding Path=Children}">
                    <StackPanel Orientation="Horizontal">
                        
                        <Image SnapsToDevicePixels="True" Stretch="None" Margin="0,0,3,0" >
                            <Image.Style>
                                <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DisableableIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource GetTypeConverter}}" Value="{x:Type nodes:AutomationSourceViewModel}">
                                            <Setter Property="Source" Value="{StaticResource FileIcon}"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Converter={StaticResource GetTypeConverter}}" Value="{x:Type nodes:SourceDirectoryViewModel}"/>
                                                <Condition Binding="{Binding IsExpanded}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source" Value="{StaticResource DirectoryOpenIcon}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Converter={StaticResource GetTypeConverter}}" Value="{x:Type nodes:SourceDirectoryViewModel}"/>
                                                <Condition Binding="{Binding IsExpanded}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source" Value="{StaticResource DirectoryIcon}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        
                        <TextBlock Text="{Binding Name}">
                            <!--<TextBlock.InputBindings>
                                <MouseBinding Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=vw:SourceControlTestBrowser}, 
                                                                Path=DataContext.SaveTestCaseCommand}" MouseAction="LeftDoubleClick" />
                            </TextBlock.InputBindings>-->
                        </TextBlock>
                        
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLoading, FallbackValue=False}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Name="LoadingText">
                                                    <Storyboard>
                                                        <StringAnimationUsingKeyFrames Storyboard.TargetProperty="Text" Duration="0:0:1"
                                                                                       RepeatBehavior="Forever" AutoReverse="False" >
                                                            <DiscreteStringKeyFrame Value=" ."    KeyTime="0:0:0" />
                                                            <DiscreteStringKeyFrame Value=" .."   KeyTime="0:0:0.25" />
                                                            <DiscreteStringKeyFrame Value=" ..."  KeyTime="0:0:0.5" />
                                                            <DiscreteStringKeyFrame Value=" ...." KeyTime="0:0:0.75" />
                                                            <DiscreteStringKeyFrame Value=""      KeyTime="0:0:1" />
                                                        </StringAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="LoadingText"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                    <Setter Property="behaviors:TreeViewItemExpandedCommandBehavior.ExpandedCommand" Value="{Binding ExpandedCommand}"/>
                    <Setter Property="behaviors:TreeViewItemSelectedCommandBehavior.SelectedCommand" Value="{Binding SelectedCommand}"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Padding" Value="5, 2, 5, 2"/>
                    <Setter Property="FontFamily" Value="Segoe UI"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="#ADC6E5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </MultiTrigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#ADC6E5" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                        <!-- The following gives rounded selection corners. -->
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="6"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>
