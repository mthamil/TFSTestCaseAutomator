<Window x:Class="TestCaseAutomator.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xtn="clr-namespace:TestCaseAutomator.Views.MarkupExtensions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm="clr-namespace:TestCaseAutomator.ViewModels"
        xmlns:cmds="clr-namespace:SharpEssentials.Controls.Commands;assembly=SharpEssentials.Controls"
        xmlns:vw="clr-namespace:TestCaseAutomator.Views.Browser"
        xmlns:ctrls="clr-namespace:SharpEssentials.Controls;assembly=SharpEssentials.Controls"
        xmlns:clickable="clr-namespace:SharpEssentials.Controls.Behaviors.Clickable;assembly=SharpEssentials.Controls"
        Title="Test Case Automator" Height="500" Width="1000"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}"
        DataContext="{Binding Source={xtn:ViewModelLocator {x:Type vm:MainViewModel}}, Path=ViewModel}">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0" Width="Auto" HorizontalAlignment="Stretch" Margin="10,0,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".50*"/>
                <ColumnDefinition Width=".40*"/>
                <ColumnDefinition Width=".10*"/>
            </Grid.ColumnDefinitions>
            
            <DockPanel Grid.Column="0" Dock="Left">
                <TextBlock Text="Server:" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <ComboBox IsEditable="True" ItemsSource="{Binding Servers.All}" SelectedItem="{Binding Servers.Selected}" 
                          Text="{Binding Servers.CurrentUri, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Uri"
                          Width="Auto" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Center">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Forget" ToolTip="Remove server from saved list."
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, 
                                                                    Path=PlacementTarget.DataContext.ForgetCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="{StaticResource RemoveServerIcon}" Style="{StaticResource DisableableIcon}" 
                                                       RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </DockPanel>
            
            <DockPanel Grid.Column="1" Margin="10,0,0,0" Dock="Left">
                <TextBlock Text="Project:" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <ComboBox SelectedItem="{Binding ProjectName}" ItemsSource="{Binding ProjectNames}" 
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Center" Width="Auto"
                          IsEnabled="{Binding ProjectNames.Count}">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProjectNames.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="false"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </DockPanel>

            <Button Grid.Column="2" Command="{Binding ConnectCommand}" Height="30" Width="30" HorizontalAlignment="Right">
                <Image RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource DisableableIcon}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanRefresh}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource RefreshIcon}"/>
                                    <Setter Property="ToolTip" Value="Reconnect to TFS."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CanRefresh}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource ConnectIcon}"/>
                                    <Setter Property="ToolTip" Value="Connect to TFS."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </Grid>
        
        <DataGrid Grid.Row="1" DataContext="{Binding WorkItems}" ItemsSource="{Binding TestCases}" 
                  AutoGenerateColumns="False" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch"
                  IsReadOnly="True" CanUserReorderColumns="False" CanUserAddRows="False" SelectionMode="Single"
                  SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.TestSelection.SelectedTestCase}" 
                  MinRowHeight="25">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width=".05*"/>
                
                <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width=".40*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="ToolTip" Value="{Binding Title}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Associated Automated Test" Width=".55*">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="ToolTip" Value="{Binding AssociatedAutomation}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" Text="{Binding AssociatedAutomation}" HorizontalAlignment="Left" Width="Auto"/>

                                <DockPanel Grid.Column="1" Dock="Right" HorizontalAlignment="Right">

                                    <ctrls:MessageBox AffirmativeAction="{Binding RemoveAutomationCommand}"
                                                      Message="{Binding Id, StringFormat='Are you sure you want to remove automation for Test Case {0}?'}"
                                                      Trigger="{Binding ElementName=RemoveAutomationButton, Path=(clickable:BindableClick.IsClicked)}" 
                                                      Caption="Remove Automation?" Type="OKCancel"/>

                                    <Button Name="RemoveAutomationButton" ToolTip="Remove associated automation." IsEnabled="{Binding CanRemoveAutomation}"
                                            HorizontalAlignment="Right" VerticalContentAlignment="Center" Width="25" Height="25" Padding="2, 2">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <clickable:BindableClickAction/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Image Source="{StaticResource RemoveAutomationIcon}" Style="{StaticResource DisableableIcon}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased"/>
                                    </Button>

                                    <Button ToolTip="Edit a test case..." HorizontalAlignment="Right" Width="25" Height="25" Padding="2, 2"
                                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.TestSelection.TestBrowser, Mode=OneWay}">
                                        <Button.Command>
                                            <cmds:OpenDialogCommand Type="{x:Type vw:TestBrowser}" 
                                                                    Owner="{Binding Source={x:Static Application.Current}, Path=MainWindow}"/>
                                        </Button.Command>
                                        <Image Source="{StaticResource EditAutomationIcon}" Style="{StaticResource DisableableIcon}" 
                                               RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased"/>
                                    </Button>

                                </DockPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0">
            <StatusBarItem>
                <Image RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource ConnectedIcon}"/>
                                    <Setter Property="ToolTip" Value="Connected"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource DisconnectedIcon}"/>
                                    <Setter Property="ToolTip" Value="Disconnected"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Status}" HorizontalAlignment="Left" Margin="2"/>
            </StatusBarItem>
        </StatusBar>
        
    </Grid>
</Window>
